use UNIVERR;

select faculty.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
	JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
	JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
	JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT

SELECT FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY ROLLUP (FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT)

------------ ЗАДАНИЕ 2--------------
select  FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
	JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
	JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
	JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT WITH CUBE;


------------ ЗАДАНИЕ 3--------------
select * from groups

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
	UNION
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT

------------ ЗАДАНИЕ 3.1 --------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
	UNION ALL
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT

--------------- ЗАДАНИЕ 4----------------
SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
	INTERSECT
SELECT TOP(1)GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT

--------------------- ЗАДАНИЕ 5 ----------------

SELECT GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT
	EXCEPT
SELECT TOP(1) GROUPS.PROFESSION, PROGRESS.SUBJECT, ROUND(AVG(CAST(PROGRESS.NOTE AS FLOAT(4))), 2) AS [Средняя оценка]
FROM GROUPS
		JOIN STUDENT ON GROUPS.IDGROUP = STUDENT.IDGROUP
		JOIN PROGRESS ON STUDENT.IDSTUDENT = PROGRESS.IDSTUDENT
		JOIN FACULTY ON GROUPS.FACULTY = FACULTY.FACULTY
WHERE FACULTY.FACULTY LIKE 'ИДиП'
GROUP BY FACULTY.FACULTY, GROUPS.PROFESSION, PROGRESS.SUBJECT

------------ ЗАДАНИЕ СВОЯ БД ---------------

USE Бычок_MyBase
SELECT * FROM Группа

SELECT Группа.Номер_группы, SUM(Группа.Количество_студентов)[СУММА] 
FROM Группа
WHERE Группа.Специальность IN ('ИСИТ')
GROUP BY Группа.Номер_группы

SELECT Группа.Номер_группы, SUM(Группа.Количество_студентов)[СУММА] 
FROM Группа
WHERE Группа.Специальность IN ('ИСИТ')
GROUP  BY ROLLUP (Группа.Номер_группы)

SELECT Группа.Номер_группы, SUM(Группа.Количество_студентов)[СУММА] 
FROM Группа
WHERE Группа.Специальность IN ('ИСИТ')
GROUP BY Группа.Номер_группы WITH CUBE

SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов < 15
UNION
SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов < 40

SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов < 15
UNION ALL
SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов < 40

SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов < 15
INTERSECT
SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов < 40

SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов < 15
EXCEPT
SELECT Группа.Специальность, Группа.Количество_студентов
FROM Группа WHERE ГРУППА.Количество_студентов > 5

